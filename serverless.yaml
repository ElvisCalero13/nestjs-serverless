service: nest-serverless

plugins:
  - serverless-plugin-optimize
  - serverless-offline
  - serverless-dynamodb-local

functions:
 app: 
   handler: dist/lambda.handler
   events:
     - http:
         cors: true
         method: ANY
         path: /{proxy+}

provider: 
    name: aws
    runtime: nodejs18.x
    apiGateway:
      shouldStartNameWithService: true

    environment: 
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
      NODE_OPTIONS: --enable-source-maps --stack-trace-limit=1000
      # ONLY TO LOCAL
      DYNAMODB_ENDPOINT: ${self:custom.endpoints.dynamodbURL}
      #
    iam: 
      role: 
        statements: 
            - Effect: 'Allow'
              Action: 
                - 'dynamodb:DescribeTable'
                - 'dynamodb:Query'
                - 'dynamodb:Scan'
                - 'dynamodb:GetItem'
                - 'dynamodb:PutItem'
                - 'dynamodb:UpdateItem'
                - 'dynamodb:DeleteItem'

              Resource: arn:aws:dynamodb:us-east-1:*:table/{DynamoTable}

custom: 
    esbuild: 
      bundle: true
      minify: false
      sourcemap: true
      exclude: aws-sdk
      target: node18
      define: 'require.resolve: undefined'
      platform: node
      concurrency: 10

    dynamodb: 
      start: 
        port: 6000
        inMemory: true
        migrate: true
      stages: dev
    # ONLY TO LOCAL
    endpoints:
      dynamodbURL: 'http://localhost:6000'
    #
    optimize:
        external: ['swagger-ui-dist']

resources: 
    Resources: 
      DynamoTable: 
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: StudentsTable
          AttributeDefinitions: 
              - AttributeName: id
                AttributeType: S

          KeySchema: 
              - AttributeName: id
                KeyType: HASH

          ProvisionedThroughput: 
            ReadCapacityUnits: 1 
            WriteCapacityUnits: 1  